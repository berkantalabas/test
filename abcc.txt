#include <msp430g2553.h> //Contains all definitions for registers and built-in functions

int main(void)  //Main program
{

   WDTCTL = WDTPW + WDTHOLD; // Stop watchdog timer

   P1DIR |= BIT0; // Set P1.0 to output and P1.3 to input direction
   P1DIR |= 0x40;
   P1OUT &= ~BIT0; // set P1.0 to Off
   P1IE |= 0x18; // P1.3 interrupt enabled
   P1REN |= 0x18;
   P1IFG &= ~0x18; // P1.3 interrupt flag cleared



   __bis_SR_register(GIE); // Enable all interrupts

   while(1) //Loop forever, we'll do our job in the interrupt routine...
   {

       P1OUT ^= 0x40;


   //  __delay_cycles(100000);

   }
}
#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)
{
    P1OUT ^= BIT0;  // Toggle P1.0
  //  __delay_cycles(10000000);
    P1IFG &= ~0x18; // P1.3 interrupt flag cleared


}
